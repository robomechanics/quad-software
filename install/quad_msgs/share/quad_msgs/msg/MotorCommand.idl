// generated from rosidl_adapter/resource/msg.idl.em
// with input from quad_msgs/msg/MotorCommand.msg
// generated code does not contain a copyright notice

#include "std_msgs/msg/Header.idl"

module quad_msgs {
  module msg {
    @verbatim (language="comment", text=
      "This is a message to hold the desired position, desired velocity, feedforward torques and control gains for a single joint on Quad" "\n"
      "" "\n"
      "Accurate timing information is stored in the header")
    struct MotorCommand {
      std_msgs::msg::Header header;

      @verbatim (language="comment", text=
        "Commands" "\n"
        "Position command")
      double pos_setpoint;

      @verbatim (language="comment", text=
        "Velocity command")
      double vel_setpoint;

      @verbatim (language="comment", text=
        "Position setpoint gain")
      float kp;

      @verbatim (language="comment", text=
        "Derivative setpoint gain")
      float kd;

      @verbatim (language="comment", text=
        "Feedforward torque")
      double torque_ff;

      @verbatim (language="comment", text=
        "Diagnostics" "\n"
        "Feedback position component")
      double pos_component;

      @verbatim (language="comment", text=
        "Feedback velocity component")
      double vel_component;

      @verbatim (language="comment", text=
        "Feedback total component")
      double fb_component;

      @verbatim (language="comment", text=
        "Total effort")
      double effort;

      @verbatim (language="comment", text=
        "Feedback to total ratio")
      double fb_ratio;
    };
  };
};
